name: Build AIP Service Image
on:
  pull_request:
    types:
      - closed
    branches:
      - main
    paths-ignore:
      - deploy/**/*
jobs:
  build_aip_image:
    env:
      AWS_REGION: us-east-1
      ECR_REPO: 715841359524.dkr.ecr.us-east-1.amazonaws.com/graze.social/aip
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # TRICK TO SETUP PULUMI
      - uses: pulumi/actions@v6
        with:
          stack-name: main

      - name: setup_python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.1"

      - name: install_poetry
        uses: Gr1N/setup-poetry@v8

      - name: poetry_version
        run: poetry --version

      - name: setup_svu
        run: curl -kL https://github.com/caarlos0/svu/releases/download/v3.2.2/svu_3.2.2_linux_amd64.tar.gz | tar zx && mv svu /usr/local/bin/svu && chmod +x /usr/local/bin/svu

      - name: create_tag
        run: echo "VERSION_TAG=$(svu next)" >> $GITHUB_ENV

      - name: setup_qemu
        uses: docker/setup-qemu-action@v2

      - name: setup_buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          aws-access-key-id: ${{ secrets.ECR_ACCESS_KEY_TMP }}
          aws-secret-access-key: ${{ secrets.ECR_SECRET_KEY_TMP }}
          role-to-assume: arn:aws:iam::715841359524:role/gh-action-ecr
          role-external-id: grazebuilder
          role-duration-seconds: 1200
          role-session-name: aipbuilder
          # This is required for
          role-skip-session-tagging: true
          aws-region: us-east-1

      - name: login_to_ecr
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "false"

      - name: build_and_push
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile
          context: .
          push: true
          tags: |
            ${{env.ECR_REPO}}:${{ env.VERSION_TAG }}
            ${{env.ECR_REPO}}:latest
          builder: ${{ steps.setup_buildx.name }}
          platforms: linux/amd64

      - name: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
        run: |-
          gh release create ${{ env.VERSION_TAG }} -t ${{ env.VERSION_TAG }} -n "Release version image available: ${{ env.ECR_REPO }}:${{ env.VERSION_TAG }}"

      # Deployment

      - name: configure_deployer_creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEPLOYER_ACCESS_KEY }}
          aws-region: us-east-1
          aws-secret-access-key: ${{ secrets.DEPLOYER_SECRET_ACCESS_KEY }}

      - name: pulumi_set_tag
        run: pulumi config set --path aip_config.image_tag ${{ env.VERSION_TAG }} --stack main
        working-directory: deploy/aip

      - name: pulumi_up
        uses: pulumi/actions@v6
        with:
          command: up
          stack-name: main
          comment-on-pr: true
          work-dir: deploy/aip
          github-token: ${{ secrets.GH_RELEASE_TOKEN }}
        env:
          PULUMI_CONFIG_PASSPHRASE: ""

      - name: discord_notify_hook
        uses: stegzilla/discord-notify@v2
        with:
          webhook_url: ${{ secrets.DEV_CHANNEL_DISCORD_WEBHOOK }}
          title: "AIP Version: ${{ env.VERSION_TAG }} Deployed"
          message: "**${{ github.event.pull_request.title }}**\n**Creator:** ${{ github.event.pull_request.user.login }}\n${{ github.event.pull_request.html_url }}"
          include_image: true
          avatar_url: https://avatars.githubusercontent.com/u/196731666?s=48&v=4
          username: Graze Deploy Bot
          colour: "#0090ff"

      - name: commit_and_push
        id: commit_and_push
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
        working-directory: deploy/aip
        run: |
          git config --global user.name "bgroupe"
          git config --global user.email "casey@bgroupe.org"

          BRANCH=deploy-main-${{ env.VERSION_TAG }}-${{github.run_number}}

          git checkout -b $BRANCH
          git add Pulumi.${{ inputs.stack }}.yaml
          git commit -a -m "[auto] deploy-aip-pipeline"

          git push origin -u HEAD
          gh label create "deploy:main" --force
          gh label create "image:${{ env.VERSION_TAG }}" --force
          gh pr create  --title "[auto] deploy AIP: main-${{env.VERSION_TAG}}-${{ github.run_number }}" \
            --body "[auto] triggered by upstream PR graze-social/aip#${{ github.event.pull_request.number }}" \
            -l deploy:main \
            -l image:${{ env.VERSION_TAG }} \
            -l automerge \
            --base main \
            --head $BRANCH

          gh pr merge -d -m --admin
